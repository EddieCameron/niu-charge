doctype html
html(lang='en')
  head
    // Required meta tags
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    meta(name="theme-color" content="#343a40")

    link(rel='icon', href='/favicon.ico')
    link(rel="manifest", href="/manifest.json")

    // Bootstrap CSS
    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css', integrity='sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T', crossorigin='anonymous')

    link(rel='stylesheet' href='/style.css')

    script(src="/socket.io/socket.io.js")
    script.
      var socket=io();


    title NIU Charging
  body.bg-dark.text-light.d-flex.flex-column.pt-2
    main.container.flex-fill
      #plugError.alert.alert-danger.alert-dismissible.show.fade.mt-3.d-none(role='alert')
        strong Error
        | : connection to plug failed.
        button.close(data-dismiss="alert", aria-label="Close") &times;
      #connError.alert.alert-warning.alert-dismissible.show.fade.mt-3.d-none(role='alert')
        strong Error
        | : Data from scooter is more than 2 hours old. Battery SoC could be outdated
        button.close(data-dismiss="alert", aria-label="Close") &times;

      h1#chargingStatus.display-4 Loading
      h2#timeText.mb-0
        strong#timeHours -- 
        small#hoursText.text-muted
        strong#timeMinutes -- 
        small#minutesText.text-muted
        small.text-muted remaining

      .d-flex.flex-column.justify-content-center.text-center
        #pills-content.tab-content
          #pills-home.tab-pane.fade.show.active(role="tabpanel" aria-labelledby="Home")
            .position-relative.top-image
              img.img-fluid(src='/car_thumbnail_ngt.png')
              img#chargingImage.img-fluid.position-absolute.d-none(src='/examine_car_ngt_light.png')
          #pills-history.tab-pane.fade(role="tabpanel" aria-labelledby="History")
            .position-relative.top-image
              include history.pug

          
        #partialSOC
        .d-flex.justify-content-center
          h5.mx-2.my-0
            small A 
            strong#socA --
            small  %
          h5.mx-2.my-0
            small B 
            strong#socB --
            small  %
      
        .mb-3.mt-1.text-center
          .position-relative.shadow-lg.mb-2
            .overlay-bar
              .progress.bg-secondary
                .progress-bar.rounded#socProgress(role='progressbar', style='width: 0%', aria-valuenow=0, aria-valuemin='0', aria-valuemax='100')
            .w-100.h-100.position-absolute(style="top:0;")
              .d-flex.align-items-center.h-100
                .d-flex.justify-content-center.w-100
                    h2.my-0.mx-2
                      strong#socValue --
                      small  %
                    h2.my-0.mx-2
                      strong#mileageValue --
                      small  Km
            .overlay-range
              div.bg-light.range-80
              div.bg-light.range-85
              div.bg-light.range-90
              div.bg-light.range-95
              input#limitSlider.form-control-range(type='range', min='50', max='100', value='0' list='ticks')

          input#limitSliderMin.form-control-range(type='range', min='0', max='50', value='0' list='ticks')
          .d-flex.justify-content-around
            .display-4#limitMinValue --
            .display-4#limitValue --
          h4 Charge Limit

          //if data.isCharging && plugData.state!=-1
          #plugStats
            .d-flex.justify-content-around
              h2
                strong#plugKmh --
                small  km/hr
              h2
                strong#plugPower --
                small  W
              h2
                strong#plugCurrent --
                small  A
          ul#pills-tab.nav.nav-pills.justify-content-center.mt-3(role="tablist")
            li.nav-item
              a#pills-home.nav-link.active(data-toggle="pill", href="#pills-home", role="tab", aria-controls="pills-home", aria-selected="true") Home
            li.nav-item
              a#pills-home.nav-link(data-toggle="pill", href="#pills-history", role="tab", aria-controls="pills-history", aria-selected="false") History
        
        
    div(style="margin-bottom:4.25rem;")
    footer.fixed-bottom
      button#plugButton.btn.btn-lg.btn-block.btn-secondary.rounded-0.py-4 NO DATA


    // Optional JavaScript
    // jQuery first, then Popper.js, then Bootstrap JS
    script(src='https://code.jquery.com/jquery-3.3.1.min.js', crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js', integrity='sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1', crossorigin='anonymous')
    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js', integrity='sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM', crossorigin='anonymous')

    script.
      var data={};

      socket.emit('ready');

      $('#limitSlider').on('input', function() {
        socket.emit("limit", this.value);
      });

      $('#limitSliderMin').on('input', function() {
        socket.emit("limitMin", this.value);
      });

      socket.on('reconnect', function () {
        socket.emit('ready');
      });

      socket.on('limit',function(msg){
        data.limit = msg;
        setLimit();
      });

      socket.on('limitMin',function(msg){
        data.limitMin = msg;
        setLimitMin();
      });

      socket.on('data', function(msg){
        if(msg.scooter instanceof Object){
          data = msg;
          data.scooter.soc = Math.floor(data.scooter.soc);

          setSOC();
          setLimit();
          setLimitMin();
          $('#mileageValue').html(data.scooter.estimatedMileage);

          if(data.scooter.isCharging){
            $('#chargingStatus').html('Charging');
            $('#chargingImage').removeClass('d-none');
          }
          else
          {
            $('#chargingStatus').html('Not Charging');
            $('#chargingImage').addClass('d-none');
          }

          setPlug();
          setConnError();
        }
      });

      socket.on('plug',function(msg) {
        data.plug = msg;
        setPlug();
      });

      function setSOC(){
        $('#socProgress').css('width', data.scooter.soc + '%');
        $('#socValue').html(data.scooter.soc);

        if(data.scooter.batteries.compartmentB instanceof Object){
          $('#partialSOC').show();

        if(data.scooter.batteries.compartmentA.isConnected){
          $('#socA').html(data.scooter.batteries.compartmentA.batteryCharging);
        }
        else{
          $('#socA').html('--');
        }

        if(data.scooter.batteries.compartmentB.isConnected){
          $('#socB').html(data.scooter.batteries.compartmentB.batteryCharging);
        }
        else{
          $('#socB').html('--');
        }

        } else {
          $('#partialSOC').hide();
        }
        setTime();
      }

      function getTime(){
        let time = data.scooter.leftTime;
        if(data.scooter.soc < 100){
          time = Math.max(0, (data.scooter.leftTime * (data.limit - data.scooter.soc) / (100 - data.scooter.soc)));
        }

        let hours=getHours(time);
        let minutes=getMinutes(time);

        if(minutes==60){
          minutes=0;
          hours++;
        }

        return {hours: hours, minutes: minutes};
      }

      function getHours(time)
      {
        return Math.floor(time);
      }

      function getMinutes(time)
      {
        return Math.round(((time % 1) * 60) / 5) * 5;
      }

      function setTime(){
        if(data.scooter.isCharging){
          $('#timeText').removeClass('invisible');
          
          let time=getTime();
          
          let hourTxt='hour';

          if (time.hours > 1)
          {
            hourTxt='hrs';
          }

          if(time.hours == 0){
            time.hours='';
            hourTxt='';
          }

          $('#timeHours').html(time.hours+' ');
          $('#hoursText').html(hourTxt+' ');

          if(time.minutes == 0 && ! time.hours == 0){
            $('#minutesText').html('');
            $('#timeMinutes').html('');
          }
          else{
            $('#minutesText').html(' min ');
            $('#timeMinutes').html(time.minutes);
          }  
        }
        else{
          $('#timeText').addClass('invisible');
        }
      }

      function setLimit(){
        if ( data.limit < data.limitMin )
          data.limit = data.limitMin 

        if (data.limit == 100){
          $('#limitValue').html("Disabled");
          
        }
        else{
          $('#limitValue').html(data.limit);
          $('#limitValue').append('<small>%</small>')
        }

        $('#limitSlider').val(data.limit);

        setTime();
        setLimitVisual();
      }

      function setLimitMin(){
        if ( data.limitMin > data.limit )
          data.limitMin = data.limit 

        $('#limitMinValue').html(data.limitMin);
        $('#limitMinValue').append('<small>%</small>')

        $('#limitSliderMin').val(data.limitMin);
      }

      function setLimitVisual(){
        if (data.limit == 100){
          $('#limitSlider').addClass('slider-round');
        }
        else{
          $('#limitSlider').removeClass('slider-round');
        }
      }

      function setConnError(){
        if(Date.now() - 2 * 3600000 > data.scooter.infoTimestamp)
        {
          $('#connError').removeClass('d-none');
        }
        else{
          $('#connError').addClass('d-none');
        }
      }

      function setPlug(){
        switch(data.plug.state){
          case true:
            $('#plugError').addClass('d-none');
            $('#plugButton').removeClass('btn-success');
            $('#plugButton').addClass('btn-danger');
            $('#plugButton').html('STOP');

            $('#plugStats').removeClass('d-none');

            if(data.scooter.soc < 100){
              $('#plugKmh').html(Math.round(data.plug.power*((data.scooter.estimatedMileage*100)/data.scooter.soc)/4200));
            }
            else{
              $('#plugKmh').html(0);
            }
            
            $('#plugPower').html(data.plug.power);
            $('#plugCurrent').html(data.plug.current);

            break;
          case false:
            $('#plugError').addClass('d-none');
            $('#plugButton').removeClass('btn-danger');
            $('#plugButton').addClass('btn-success');
            $('#plugButton').html('START');

            $('#plugStats').addClass('d-none');
            break;

          case -1:
            $('#plugError').removeClass('d-none');
            $('#plugButton').removeClass('btn-danger');
            $('#plugButton').removeClass('btn-success');
            $('#plugButton').addClass('btn-secondary');
            $('#plugButton').html('NO DATA');

            $('#plugStats').addClass('d-none');
            break;
        }
      }

      $('#plugButton').click(function() {
        socket.emit('plug',$('#plugButton').hasClass('btn-success'))
      });
